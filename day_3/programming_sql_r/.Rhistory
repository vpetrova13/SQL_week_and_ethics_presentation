select(-name)
empl_teams<- empl_teams %>%
select(-name)
empl_teams <- empl_teams %>%
select(-name)
empl_teams <- empl_teams %>%
select(-name)
empl_teams <- empl_teams %>%
select(name)
empl_teams <- empl_teams %>%
select(name)
empl_teams
empl_teams <- left_join(employees, teams, by = c("team_id" = "id"))
empl_teams
empl_teams <- empl_teams %>%
select(-name)
empl_teams
empl_teams <- left_join(employees, teams, by = c("team_id" = "id"))
empl_teams
empl_teams <- empl_teams %>%
mutate(name = team_name)
empl_teams <- empl_teams %>%
rename(name, team_name)
empl_teams <- empl_teams %>%
rename(team_name = name)
empl_teams
positive_words <- c("great", "good", "happy", "content", "fulfilled", "fulfilling", "positive", "positives", "cheerful", "nice", "ambition", "ambitions", "ambitious", "progress", "joy", "fast", "achieve", "achieving", "achievements", "best", "better",  "unlimited", "pros", "competitive", "opportunity", "advancement", "friendly", "smart", "interesting", "challenging", "grow", "caring", "balance", "helpful", "advantage", "learning", "ethical", "responsible", "responsibilities")
negative_words <- c("worse", "worsening", "worst", "slow", "sluggish", "impatient", "unfulfilled", "unfulfilling", "negative", "bad", "limited", "limit", "limitations", "cons", "frustrated", "frustrating", "frustration", "dull", "boring", "politics", "political", "ignore", "ignored", "ignoring", "sad", "depressed", "depressing", "nasty", "stress", "stresses", "stressed", "stressful", "horrid", "horrible", "terrible", "deadline", "deadlines", "uncaring", "remote", "difficult", "difficulties", "bully", "bullying")
sentiment_words <- tibble(
word = positive_words,
score = 1
) %>% bind_rows(
tibble(
word = negative_words,
score = -1
)
)
sentiment_words
library(tidyverse)
library(RPostgres)
source("~/acme_credentials.R")
db_connection <- dbConnect(
drv = Postgres(),
user = "acme_user",
password = "g128n0e83kc8x3fy",
dbname = "acme_pool",
host = "db-postgresql-lon1-94437-do-user-4831272-0.a.db.ondigitalocean.com",
port = 25061,
bigint = "numeric"
)
rm(username, password, host)
dbListTables(conn = db_connection)
dbListFields(db_connection, name = "employees")
employees <- dbGetQuery(db_connection,
statement = "SELECT * FROM employees;")
employees
employees <- employees %>%
mutate(full_name = str_c(first_name, last_name, sep = " "))
employees
teams <- dbGetQuery(db_connection,
statement = "SELECT * FROM teams;")
teams
empl_teams <- left_join(employees, teams, by = c("team_id" = "id"))
empl_teams
empl_teams <- empl_teams %>%
rename(team_name = name)
empl_teams
positive_words <- c("great", "good", "happy", "content", "fulfilled", "fulfilling", "positive", "positives", "cheerful", "nice", "ambition", "ambitions", "ambitious", "progress", "joy", "fast", "achieve", "achieving", "achievements", "best", "better",  "unlimited", "pros", "competitive", "opportunity", "advancement", "friendly", "smart", "interesting", "challenging", "grow", "caring", "balance", "helpful", "advantage", "learning", "ethical", "responsible", "responsibilities")
negative_words <- c("worse", "worsening", "worst", "slow", "sluggish", "impatient", "unfulfilled", "unfulfilling", "negative", "bad", "limited", "limit", "limitations", "cons", "frustrated", "frustrating", "frustration", "dull", "boring", "politics", "political", "ignore", "ignored", "ignoring", "sad", "depressed", "depressing", "nasty", "stress", "stresses", "stressed", "stressful", "horrid", "horrible", "terrible", "deadline", "deadlines", "uncaring", "remote", "difficult", "difficulties", "bully", "bullying")
sentiment_words <- tibble(
word = positive_words,
score = 1
) %>% bind_rows(
tibble(
word = negative_words,
score = -1
)
)
sentiment_words
feedbacks
feedbacks <- clean_feedbacks %>%
select(message)
feedbacks <- clean_feedbacks %>%
select()
clean_feedbacks <- feedbacks %>%
select(message)
clean_feedbacks <- feedbacks %>%
select(message) %>%
mutate(message = str_to_lower(message))
clean_feedbacks
clean_feedbacks <- feedbacks %>%
select(message) %>%
mutate(message = str_to_lower(message)) %>%
mutate(message = str_remove_all(message, "[:punct:]"))
clean_feedbacks
clean_feedbacks <- feedbacks %>%
select(message) %>%
mutate(message = str_to_lower(message)) %>%
mutate(message = str_remove_all(message, "[:punct:]")) %>%
mutate(message = str_squish(message))
clean_feedbacks
clean_feedbacks <- feedbacks %>%
select(message) %>%
mutate(message = str_to_lower(message)) %>%
mutate(message = str_remove_all(message, "[:punct:]"))
clean_feedbacks
clean_feedbacks <- feedbacks %>%
select(message) %>%
mutate(message = str_to_lower(message)) %>%
mutate(message = str_remove_all(message, "[:punct:]")) %>%
mutate(message = str_squish(message))
clean_feedbacks
clean_feedbacks <- feedbacks %>%
select(message) %>%
mutate(message = str_to_lower(message)) %>%
mutate(message = str_remove_all(message, "[:punct:]")) %>%
mutate(message = str_squish(message)) %>%
mutate(message = str_trim(message))
clean_feedbacks
split(clean_feedbacks)
split(clean_feedbacks, f=z)
?split
split(clean_feedbacks, words)
ab <- split(clean_feedbacks, words)
clean_feedbacks %>%
split(clean_feedbacks, words) %>%
unnest_longer()
clean_feedbacks %>%
split(clean_feedbacks, words) %>%
unnest_longer()
class(clean_feedbacks)
clean_feedbacks <- split(clean_feedbacks, seq(nrow(clean_feedbacks)))
clean_feedbacks <- split(clean_feedbacks, seq(nrow(clean_feedbacks)))
clean_feedbacks <- split(clean_feedbacks, seq(nrow(clean_feedbacks)))
clean_feedbacks <- split(clean_feedbacks, seq(nrow(clean_feedbacks)))
clean_feedbacks <- split(clean_feedbacks, seq(nrow(clean_feedbacks)))
clean_feedbacks <- split(clean_feedbacks, seq(nrow(clean_feedbacks))), rownames(clean_feedbacks)
clean_feedbacks <- split(clean_feedbacks, seq(nrow(clean_feedbacks)),
rownames(clean_feedbacks))
clean_feedbacks <- split(clean_feedbacks, nrow(clean_feedbacks),
rownames(clean_feedbacks))
clean_feedbacks <- as.list(as.data.frame(cclean_feedbacks))
clean_feedbacks <- as.list(as.data.frame(clean_feedbacks))
clean_feedbacks <- as.list(as.data.frame(clean_feedbacks))
clean_feedbacks
clean_feedbacks <- feedbacks %>%
select(message) %>%
mutate(message = str_to_lower(message)) %>%
mutate(message = str_remove_all(message, "[:punct:]")) %>%
mutate(message = str_squish(message)) %>%
mutate(message = str_trim(message))
clean_feedbacks
clean_feedbacks <- separate_rows(clean_feedbacks, 1, sep = " ")
clean_feedbacks <- separate_rows(clean_feedbacks, 1, sep = " ")
clean_feedbacks
full_join(clean_feedbacks, sentiment_words, by = c(word = message))
full_join(clean_feedbacks, sentiment_words, by = c("word" = "message"))
full_join(clean_feedbacks, sentiment_words, by = c("message"="word"))
inner_join(clean_feedbacks, sentiment_words, by = c("message"="word"))
inner_join(clean_feedbacks, sentiment_words, by = c("message"="word"))
total_score <- inner_join(clean_feedbacks, sentiment_words, by = c("message"="word"))
total_score <- inner_join(clean_feedbacks, sentiment_words, by = c("message"="word")) %>%
mutate(total_score_sum = count(score))
total_score <- inner_join(clean_feedbacks, sentiment_words, by = c("message"="word")) %>%
mutate(total_score_sum = sum(score))
total_score <- inner_join(clean_feedbacks, sentiment_words, by = c("message"="word")) %>%
mutate(total_score_sum = sum(score))
total_score
source("~/acme_credentials.R")
db_connection <- dbConnect(
drv = Postgres(),
user = acme_username,
password = acme_password,
dbname = "acme_pool",
host = "db-postgresql-lon1-94437-do-user-4831272-0.a.db.ondigitalocean.com",
port = 25061,
bigint = "numeric"
)
source("~/acme_credentials.R")
db_connection <- dbConnect(
drv = Postgres(),
user = acme_username,
password = acme_password,
dbname = "acme_pool",
host = "db-postgresql-lon1-94437-do-user-4831272-0.a.db.ondigitalocean.com",
port = 25061,
bigint = "numeric"
)
source("~/acme_credentials.R")
db_connection <- dbConnect(
drv = Postgres(),
user = acme_username,
password = acme_password,
dbname = "acme_pool",
host = "db-postgresql-lon1-94437-do-user-4831272-0.a.db.ondigitalocean.com",
port = 25061,
bigint = "numeric"
)
library(tidyverse)
library(RPostgres)
source("~/acme_credentials.R")
db_connection <- dbConnect(
drv = Postgres(),
user = acme_username,
password = acme_password,
dbname = "acme_pool",
host = "db-postgresql-lon1-94437-do-user-4831272-0.a.db.ondigitalocean.com",
port = 25061,
bigint = "numeric"
)
rm(acme_username, password, host)
dbListTables(conn = db_connection)
dbListFields(db_connection, name = "employees")
employees <- dbGetQuery(db_connection,
statement = "SELECT * FROM employees;")
employees
employees <- employees %>%
mutate(full_name = str_c(first_name, last_name, sep = " "))
employees
teams <- dbGetQuery(db_connection,
statement = "SELECT * FROM teams;")
teams
empl_teams <- left_join(employees, teams, by = c("team_id" = "id"))
empl_teams
empl_teams <- empl_teams %>%
rename(team_name = name)
empl_teams
positive_words <- c("great", "good", "happy", "content", "fulfilled", "fulfilling", "positive", "positives", "cheerful", "nice", "ambition", "ambitions", "ambitious", "progress", "joy", "fast", "achieve", "achieving", "achievements", "best", "better",  "unlimited", "pros", "competitive", "opportunity", "advancement", "friendly", "smart", "interesting", "challenging", "grow", "caring", "balance", "helpful", "advantage", "learning", "ethical", "responsible", "responsibilities")
negative_words <- c("worse", "worsening", "worst", "slow", "sluggish", "impatient", "unfulfilled", "unfulfilling", "negative", "bad", "limited", "limit", "limitations", "cons", "frustrated", "frustrating", "frustration", "dull", "boring", "politics", "political", "ignore", "ignored", "ignoring", "sad", "depressed", "depressing", "nasty", "stress", "stresses", "stressed", "stressful", "horrid", "horrible", "terrible", "deadline", "deadlines", "uncaring", "remote", "difficult", "difficulties", "bully", "bullying")
sentiment_words <- tibble(
word = positive_words,
score = 1
) %>% bind_rows(
tibble(
word = negative_words,
score = -1
)
)
sentiment_words
clean_feedbacks <- feedbacks %>%
select(message) %>%
mutate(message = str_to_lower(message)) %>%
mutate(message = str_remove_all(message, "[:punct:]")) %>%
mutate(message = str_squish(message)) %>%
mutate(message = str_trim(message))
clean_feedbacks
clean_feedbacks <- separate_rows(clean_feedbacks, 1, sep = " ")
clean_feedbacks
total_score <- inner_join(clean_feedbacks, sentiment_words, by = c("message"="word")) %>%
mutate(total_score_sum = sum(score))
total_score
source("~/acme_credentials.R")
db_connection <- dbConnect(
drv = Postgres(),
user = acme_username,
password = acme_password,
dbname = "acme_pool",
host = "db-postgresql-lon1-94437-do-user-4831272-0.a.db.ondigitalocean.com",
port = 25061,
bigint = "numeric"
)
rm(acme_username, acme_password, host)
source("~/acme_credentials.R")
db_connection <- dbConnect(
drv = Postgres(),
user = acme_username,
password = acme_password,
dbname = "acme_pool",
host = "db-postgresql-lon1-94437-do-user-4831272-0.a.db.ondigitalocean.com",
port = 25061,
bigint = "numeric"
)
rm(acme_username, acme_password)
library(tidyverse)
library(RPostgres)
source("~/acme_credentials.R")
db_connection <- dbConnect(
drv = Postgres(),
user = acme_username,
password = acme_password,
dbname = "acme_pool",
host = "db-postgresql-lon1-94437-do-user-4831272-0.a.db.ondigitalocean.com",
port = 25061,
bigint = "numeric"
)
rm(acme_username, acme_password)
library(tidyverse)
library(RPostgres)
source("~/acme_credentials.R")
db_connection <- dbConnect(
drv = Postgres(),
user = acme_username,
password = acme_password,
dbname = "acme_pool",
host = "db-postgresql-lon1-94437-do-user-4831272-0.a.db.ondigitalocean.com",
port = 25061,
bigint = "numeric"
)
rm(acme_username, acme_password)
dbListTables(conn = db_connection)
dbListFields(db_connection, name = "employees")
employees <- dbGetQuery(db_connection,
statement = "SELECT * FROM employees;")
employees
employees <- employees %>%
mutate(full_name = str_c(first_name, last_name, sep = " "))
employees
teams <- dbGetQuery(db_connection,
statement = "SELECT * FROM teams;")
teams
empl_teams <- left_join(employees, teams, by = c("team_id" = "id"))
empl_teams
empl_teams <- empl_teams %>%
rename(team_name = name)
empl_teams
positive_words <- c("great", "good", "happy", "content", "fulfilled", "fulfilling", "positive", "positives", "cheerful", "nice", "ambition", "ambitions", "ambitious", "progress", "joy", "fast", "achieve", "achieving", "achievements", "best", "better",  "unlimited", "pros", "competitive", "opportunity", "advancement", "friendly", "smart", "interesting", "challenging", "grow", "caring", "balance", "helpful", "advantage", "learning", "ethical", "responsible", "responsibilities")
negative_words <- c("worse", "worsening", "worst", "slow", "sluggish", "impatient", "unfulfilled", "unfulfilling", "negative", "bad", "limited", "limit", "limitations", "cons", "frustrated", "frustrating", "frustration", "dull", "boring", "politics", "political", "ignore", "ignored", "ignoring", "sad", "depressed", "depressing", "nasty", "stress", "stresses", "stressed", "stressful", "horrid", "horrible", "terrible", "deadline", "deadlines", "uncaring", "remote", "difficult", "difficulties", "bully", "bullying")
sentiment_words <- tibble(
word = positive_words,
score = 1
) %>% bind_rows(
tibble(
word = negative_words,
score = -1
)
)
sentiment_words
clean_feedbacks <- feedbacks %>%
select(message) %>%
mutate(message = str_to_lower(message)) %>%
mutate(message = str_remove_all(message, "[:punct:]")) %>%
mutate(message = str_squish(message)) %>%
mutate(message = str_trim(message))
clean_feedbacks
clean_feedbacks <- separate_rows(clean_feedbacks, 1, sep = " ")
clean_feedbacks
total_score <- inner_join(clean_feedbacks, sentiment_words, by = c("message"="word")) %>%
mutate(total_score_sum = sum(score))
total_score
dbDisconnect(conn = db_connection)
library(tidyverse)
library(RPostgres)
source("~/acme_credentials.R")
db_connection <- dbConnect(
drv = Postgres(),
user = acme_username,
password = acme_password,
dbname = "acme_pool",
host = "db-postgresql-lon1-94437-do-user-4831272-0.a.db.ondigitalocean.com",
port = 25061,
bigint = "numeric"
)
rm(acme_username, acme_password)
dbListTables(conn = db_connection)
dbListFields(db_connection, name = "employees")
employees <- dbGetQuery(db_connection,
statement = "SELECT * FROM employees;")
employees
employees <- employees %>%
mutate(full_name = str_c(first_name, last_name, sep = " "))
employees
teams <- dbGetQuery(db_connection,
statement = "SELECT * FROM teams;")
teams
empl_teams <- left_join(employees, teams, by = c("team_id" = "id"))
empl_teams
empl_teams <- empl_teams %>%
rename(team_name = name)
empl_teams
positive_words <- c("great", "good", "happy", "content", "fulfilled", "fulfilling", "positive", "positives", "cheerful", "nice", "ambition", "ambitions", "ambitious", "progress", "joy", "fast", "achieve", "achieving", "achievements", "best", "better",  "unlimited", "pros", "competitive", "opportunity", "advancement", "friendly", "smart", "interesting", "challenging", "grow", "caring", "balance", "helpful", "advantage", "learning", "ethical", "responsible", "responsibilities")
negative_words <- c("worse", "worsening", "worst", "slow", "sluggish", "impatient", "unfulfilled", "unfulfilling", "negative", "bad", "limited", "limit", "limitations", "cons", "frustrated", "frustrating", "frustration", "dull", "boring", "politics", "political", "ignore", "ignored", "ignoring", "sad", "depressed", "depressing", "nasty", "stress", "stresses", "stressed", "stressful", "horrid", "horrible", "terrible", "deadline", "deadlines", "uncaring", "remote", "difficult", "difficulties", "bully", "bullying")
sentiment_words <- tibble(
word = positive_words,
score = 1
) %>% bind_rows(
tibble(
word = negative_words,
score = -1
)
)
sentiment_words
clean_feedbacks <- feedbacks %>%
select(message) %>%
mutate(message = str_to_lower(message)) %>%
mutate(message = str_remove_all(message, "[:punct:]")) %>%
mutate(message = str_squish(message)) %>%
mutate(message = str_trim(message))
clean_feedbacks
clean_feedbacks <- separate_rows(clean_feedbacks, 1, sep = " ")
clean_feedbacks
total_score <- inner_join(clean_feedbacks, sentiment_words, by = c("message"="word")) %>%
mutate(total_score_sum = sum(score))
total_score
#dbDisconnect(conn = db_connection)
message_scores <- employees_teams_feedbacks %>%
mutate(
word = str_split(message, " ")
) %>%
unnest_longer(word) %>%
inner_join(sentiment_words, by = "word") %>%
group_by(message_id) %>%
summarise(score = sum(score))
message_scores <- clean_feedbacks %>%
mutate(
word = str_split(message, " ")
) %>%
unnest_longer(word) %>%
inner_join(sentiment_words, by = "word") %>%
group_by(message_id) %>%
summarise(score = sum(score))
employees_teams_feedbacks <- employees_teams_feedbacks %>%
mutate(
message = str_to_lower(message),
message = str_remove_all(message, "[[:punct:]]"), # remove punctuation
message = str_squish(message), # all internal whitespace goes to single space
message = str_trim(message) # leading and trailing whitespace removed
)
employees_teams_feedbacks <- employees_teams_feedbacks %>%
mutate(
message = str_to_lower(message),
message = str_remove_all(message, "[[:punct:]]"), # remove punctuation
message = str_squish(message), # all internal whitespace goes to single space
message = str_trim(message) # leading and trailing whitespace removed
)
message_scores <- employees_teams_feedbacks %>%
mutate(
word = str_split(message, " ")
) %>%
unnest_longer(word) %>%
inner_join(sentiment_words, by = "word") %>%
group_by(message_id) %>%
summarise(score = sum(score))
message_scores <- employees_teams_feedbacks %>%
mutate(
word = str_split(message, " ")
) %>%
unnest_longer(word) %>%
inner_join(sentiment_words, by = "word") %>%
group_by(message_id) %>%
summarise(score = sum(score))
message_scores
employees_teams_feedbacks_scores <- employees_teams_feedbacks %>%
left_join(message_scores, by = "message_id") %>%
mutate(score = replace_na(score, 0))
employees_teams_feedbacks_scores
employees_teams_feedbacks_scores %>%
filter(score == max(score)) %>%
select(team_name)
employees_teams_feedbacks_scores %>%
filter(score == min(score)) %>%
select(team_name)
clean_message <- function(message){
message <- tolower(message)
message <- gsub(message, pattern = "[[:punct:]]", replacement = "")
}
score_message <- function(message, positive_words, negative_words){
message_words <- unlist(strsplit(message, split = " ", fixed = TRUE))
message_score <- 0
for (word in positive_words){
message_score <- message_score + sum(message_words == word)
}
for (word in negative_words){
message_score <- message_score - sum(message_words == word)
}
return(message_score)
}
# go through each message in employees_teams_feedbacks, clean and score it
score <- numeric()
for (message in employees_teams_feedbacks[, 'message']){
message <- clean_message(message)
message_score <- score_message(message, positive_words, negative_words)
score <- c(score, message_score)
}
# add the scores
employees_teams_feedbacks['score'] <- score
employees_teams_feedbacks
selector <- employees_teams_feedbacks[, 'score'] == max(employees_teams_feedbacks[, 'score'])
mostpos_employees_teams <- employees_teams_feedbacks[selector, "team_name"]
mostpos_employees_teams
selector <- employees_teams_feedbacks[, 'score'] == min(employees_teams_feedbacks[, 'score'])
mostneg_employees_teams <- employees_teams_feedbacks[selector, "team_name"]
mostneg_employees_teams
message_scores <- employees_teams_feedbacks %>%
mutate(
word = str_split(message, " ")
) %>%
unnest_longer(word) %>%
inner_join(sentiment_words, by = "word") %>%
group_by(message_id) %>%
summarise(score = sum(score))
message_scores
employees_teams_feedbacks_scores <- employees_teams_feedbacks %>%
left_join(message_scores, by = "message_id") %>%
mutate(score = replace_na(score, 0))
employees_teams_feedbacks_scores
message_scores <- employees_teams_feedbacks %>%
mutate(
word = str_split(message, " ")
message_scores <- employees_teams_feedbacks %>%
message_scores
message_scores <- employees_teams_feedbacks %>%
mutate(
word = str_split(message, " ")
) %>%
unnest_longer(word) %>%
inner_join(sentiment_words, by = "word") %>%
group_by(message_id) %>%
summarise(score = sum(score))
message_scores
?unnest_longer
dbDisconnect(conn = db_connection)
?selector
